name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Run tests
      run: ./gradlew test
    
    - name: Build release AAR
      run: ./gradlew :Grantly:prepareRelease
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## Changes in this Release
          
          Please see [CHANGELOG.md](https://github.com/PrajyotxD/Grantly/blob/main/CHANGELOG.md) for detailed changes.
          
          ## Installation
          
          ### Gradle
          ```gradle
          dependencies {
              implementation 'dev.grantly:grantly:${{ steps.get_version.outputs.VERSION }}'
          }
          ```
          
          ### Maven
          ```xml
          <dependency>
              <groupId>dev.grantly</groupId>
              <artifactId>grantly</artifactId>
              <version>${{ steps.get_version.outputs.VERSION }}</version>
          </dependency>
          ```
          
          ## Files
          
          - `grantly-${{ steps.get_version.outputs.VERSION }}.aar` - Main library AAR
          - `grantly-${{ steps.get_version.outputs.VERSION }}-sources.jar` - Source code
          - `grantly-${{ steps.get_version.outputs.VERSION }}-javadoc.jar` - API documentation
        draft: false
        prerelease: false
    
    - name: Upload AAR
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Grantly/build/outputs/aar/Grantly-release.aar
        asset_name: grantly-${{ steps.get_version.outputs.VERSION }}.aar
        asset_content_type: application/octet-stream
    
    - name: Upload Sources JAR
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Grantly/build/outputs/aar/Grantly-release-sources.jar
        asset_name: grantly-${{ steps.get_version.outputs.VERSION }}-sources.jar
        asset_content_type: application/java-archive
    
    - name: Upload Javadoc JAR
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Grantly/build/outputs/aar/Grantly-release-javadoc.jar
        asset_name: grantly-${{ steps.get_version.outputs.VERSION }}-javadoc.jar
        asset_content_type: application/java-archive
    
    - name: Publish to GitHub Packages
      run: ./gradlew publish
      env:
        USERNAME: ${{ github.actor }}
        TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Publish to Maven Central
      if: contains(github.ref, 'refs/tags/v') && !contains(github.ref, 'alpha') && !contains(github.ref, 'beta')
      run: ./gradlew publishReleasePublicationToSonatypeRepository
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
        SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
        SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}